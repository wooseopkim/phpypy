name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.matrix.outputs.platforms }}
    steps:
      - id: matrix
        run: |
          echo 'platforms=["linux/amd64", "linux/arm64"]' >> "$GITHUB_OUTPUT"
  check:
    # for Linux ARM runners are supported only as larger runners,
    # we need to run cross-platform tests inside Docker containers
    # see https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/about-larger-runners
    runs-on: ubuntu-latest
    needs: [define-matrix]
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.define-matrix.outputs.platforms) }}
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: docker/setup-qemu-action@v3
      - run: ./scripts/build_runner "$PLATFORM"
        env:
          PLATFORM: ${{ matrix.platform }}

      - run: docker run --rm phpypy pipenv run test
      - run: docker run --rm phpypy pipenv run flit build
  build:
    runs-on: ubuntu-latest
    needs: [define-matrix]
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.define-matrix.outputs.platforms) }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - id: submodule-hashes
        run: |
          echo "php-src=$(git submodule status ./php-src | awk '{ print $1 }' | cut  -c 1-7)" >> $GITHUB_OUTPUT
          echo "phpy=$(git submodule status ./phpy | awk '{ print $1 }' | cut  -c 1-7)" >> $GITHUB_OUTPUT
      - id: cache-libs
        uses: actions/cache@v4
        with:
          path: ./lib/${{ matrix.platform }}
          key: libs-${{ matrix.platform }}-${{ hashFiles('./scripts', './docker') }}-${{ steps.submodule-hashes.outputs.php-src }}-${{ steps.submodule-hashes.outputs.phpy }}
      - uses: docker/setup-qemu-action@v3
      - if: steps.cache-libs.outputs.cache-hit != 'true'
        run: ./scripts/extract_libs "$PLATFORM"
        env:
          PLATFORM: ${{ matrix.platform }}

      - id: target-platform
        run: |
          SPLIT=(${PLATFORM//\// })
          echo "os=${SPLIT[0]}" >> $GITHUB_OUTPUT
          echo "arch=${SPLIT[1]}" >> $GITHUB_OUTPUT
        env:
          PLATFORM: ${{ matrix.platform }}
      - if: github.ref == 'refs/heads/main'
        # currently v4 does not work with nektos/act - same for download-artifact
        # see https://github.com/nektos/act/issues/329
        uses: actions/upload-artifact@v3
        with:
          name: libs-${{ steps.target-platform.outputs.os }}-${{ steps.target-platform.outputs.arch }}
          path: ./lib
          if-no-files-found: error
  publish:
    if: github.ref == 'refs/heads/main'
    needs: [check, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install pipenv
      - run: pipenv sync --dev

      - uses: actions/download-artifact@v3
        with:
          path: /tmp/phpypy
          pattern: libs-*
      - run: mv /tmp/phpypy/libs-* ./lib

      - run: pipenv run flit publish
        env:
          FLIT_INDEX_URL: https://test.pypi.org/legacy/
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ secrets.PYPI_TOKEN }}
